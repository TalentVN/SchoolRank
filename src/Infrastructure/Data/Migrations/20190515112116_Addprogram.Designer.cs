// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalentVN.Infrastructure.Data;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190515112116_Addprogram")]
    partial class Addprogram
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TalentVN.ApplicationCore.Entities.EducationProgram", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("SchoolProfileId");

                    b.HasKey("Id");

                    b.HasIndex("SchoolProfileId");

                    b.ToTable("EducationPrograms");
                });

            modelBuilder.Entity("TalentVN.ApplicationCore.Entities.SRank", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SRanks");
                });

            modelBuilder.Entity("TalentVN.ApplicationCore.Entities.SRankItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Rank");

                    b.Property<string>("SRankId");

                    b.Property<string>("SchoolProfileId");

                    b.HasKey("Id");

                    b.HasIndex("SRankId");

                    b.HasIndex("SchoolProfileId");

                    b.ToTable("SRankItems");
                });

            modelBuilder.Entity("TalentVN.ApplicationCore.Entities.SchoolProfile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Detail");

                    b.Property<string>("Email");

                    b.Property<string>("Localtion");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("WebSite");

                    b.HasKey("Id");

                    b.ToTable("SchoolProfiles");
                });

            modelBuilder.Entity("TalentVN.ApplicationCore.Entities.Specialized", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("SchoolProfileId");

                    b.HasKey("Id");

                    b.HasIndex("SchoolProfileId");

                    b.ToTable("Specializeds");
                });

            modelBuilder.Entity("TalentVN.ApplicationCore.Entities.EducationProgram", b =>
                {
                    b.HasOne("TalentVN.ApplicationCore.Entities.SchoolProfile")
                        .WithMany("EducationPrograms")
                        .HasForeignKey("SchoolProfileId");
                });

            modelBuilder.Entity("TalentVN.ApplicationCore.Entities.SRankItem", b =>
                {
                    b.HasOne("TalentVN.ApplicationCore.Entities.SRank", "SRank")
                        .WithMany("SchoolRankItems")
                        .HasForeignKey("SRankId");

                    b.HasOne("TalentVN.ApplicationCore.Entities.SchoolProfile", "SchoolProfile")
                        .WithMany()
                        .HasForeignKey("SchoolProfileId");
                });

            modelBuilder.Entity("TalentVN.ApplicationCore.Entities.Specialized", b =>
                {
                    b.HasOne("TalentVN.ApplicationCore.Entities.SchoolProfile")
                        .WithMany("Specializeds")
                        .HasForeignKey("SchoolProfileId");
                });
#pragma warning restore 612, 618
        }
    }
}
